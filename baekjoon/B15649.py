'''
    N과 M(1)  --백트래킹
    
--문제
자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열
-입력
첫째 줄에 자연수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)

--출력
한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 
중복되는 수열을 여러 번 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다.

수열은 사전 순으로 증가하는 순서로 출력해야 한다.


백트래킹 : DFS의 일종(재귀함수)
-DFS 깊이 우선 탐색(Defth-First Search)
- 자기 자신을 호출하는 '순환 알고리즈므이 형태'를 가진다.
- 전위 순회(Pre-Order Traversals)를 포함한 다른 형태의 트리순회는 모두 DFS의 한종류
- 그래프 탐색의 경우 '어떤 노드를 방문 했었는지 여부를 반드시 검사' 해야한다.
    - 무한루프 위험 주의
    
-구현방법
    - 순환 호출 이용
    - 명시적인 스택 사용
        - 방문한 정점들을 스택에 저장하였다가 다시 꺼내어 작업한다.
    


'''

import sys

input = sys.stdin.readline

#m은 만들 리스트의 길이
n, m = map(int, input().split())
s=[]

def dfs():
    # print("s : ", s)
    if len(s) == m:     #리스트 길이 max
        print(' '.join(map(str, s)))        
        return
    
    for i in range(1, n+1):
        if i not in s:  #리스트에 요소 있는지 확인
            s.append(i)
            dfs()   # print #재귀
            s.pop()  #??? 마지막 요소 삭제
            
dfs()